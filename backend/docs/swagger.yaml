basePath: /api
definitions:
  models.Issue:
    properties:
      assigned_to:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      images:
        items:
          type: string
        type: array
      location:
        properties:
          latitude:
            type: number
          longitude:
            type: number
        type: object
      reported_by:
        type: string
      status:
        $ref: '#/definitions/models.IssueStatus'
      type:
        $ref: '#/definitions/models.IssueType'
      updated_at:
        type: string
    type: object
  models.IssueCreate:
    properties:
      description:
        type: string
      images:
        items:
          type: string
        type: array
      location:
        properties:
          latitude:
            type: number
          longitude:
            type: number
        required:
        - latitude
        - longitude
        type: object
      reported_by:
        type: string
      type:
        $ref: '#/definitions/models.IssueType'
    required:
    - description
    - location
    - reported_by
    - type
    type: object
  models.IssueStatus:
    enum:
    - NEW
    - IN_PROGRESS
    - RESOLVED
    - CLOSED
    type: string
    x-enum-varnames:
    - StatusNew
    - StatusInProgress
    - StatusResolved
    - StatusClosed
  models.IssueType:
    enum:
    - POTHOLE
    - STREET_LIGHT
    - GRAFFITI
    - ANTI_SOCIAL
    - FLY_TIPPING
    - BLOCKED_DRAIN
    type: string
    x-enum-varnames:
    - TypePothole
    - TypeStreetLight
    - TypeGraffiti
    - TypeAntiSocial
    - TypeFlyTipping
    - TypeBlockedDrain
  models.IssueUpdate:
    properties:
      assigned_to:
        type: string
      status:
        $ref: '#/definitions/models.IssueStatus'
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API for managing city council reports and issues
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Chalkstone Council Reports API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and receive JWT token
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          properties:
            password:
              type: string
            username:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user account
      parameters:
      - description: User registration details
        in: body
        name: user
        required: true
        schema:
          properties:
            is_staff:
              type: boolean
            password:
              type: string
            username:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register new user
      tags:
      - auth
  /issues:
    get:
      description: Get paginated list of issues
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Issue'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List issues
      tags:
      - issues
    post:
      consumes:
      - application/json
      description: Create a new issue report
      parameters:
      - description: Issue details
        in: body
        name: issue
        required: true
        schema:
          $ref: '#/definitions/models.IssueCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: integer
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create new issue
      tags:
      - issues
  /issues/{id}:
    get:
      description: Retrieve an issue by its ID
      parameters:
      - description: Issue ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Issue'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get issue by ID
      tags:
      - issues
    put:
      consumes:
      - application/json
      description: Update an existing issue
      parameters:
      - description: Issue ID
        in: path
        name: id
        required: true
        type: integer
      - description: Issue update details
        in: body
        name: issue
        required: true
        schema:
          $ref: '#/definitions/models.IssueUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update issue
      tags:
      - issues
  /issues/search:
    get:
      description: Search issues by type and status
      parameters:
      - description: Issue type
        in: query
        name: type
        type: string
      - description: Issue status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Issue'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Search issues
      tags:
      - issues
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
